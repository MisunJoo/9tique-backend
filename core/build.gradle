/**
 * admin, rest-api의 공통 모듈
 * rdb, redis 개발을 위한 settings, domain, repository
 */
bootRepackage {
    enabled = false
}

dependencies {
	testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')

	// db
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	testCompile('com.h2database:h2')
	runtime('mysql:mysql-connector-java')

	// cache
//    compile('org.springframework.boot:spring-boot-starter-cache')
//    compile('org.springframework.boot:spring-boot-starter-data-redis')

	// lombok
	compile('org.projectlombok:lombok')
//    compile('org.flywaydb:flyway-core')

	// queryDSL
	compile 'com.mysema.querydsl:querydsl-jpa:3.7.2'
	compile 'com.mysema.querydsl:querydsl-apt:3.7.2'

    // apache commons
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'

    compile 'io.jsonwebtoken:jjwt:0.7.0'  // jwt
}


// https://gist.github.com/EdwardBeckett/5377401
// http://blog.jongminkim.co.kr/?p=386
sourceSets {
    querydsl {
        java {
            srcDirs = ['src/main/querydsl']
        }
    }
}

configurations {
//    compile.exclude module: "spring-boot-starter-jdbc"  // 다른 commection pool 사용시 jdbc exclude
    querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            '-proc:only', '-processor', 'com.mysema.query.apt.jpa.JPAAnnotationProcessor'
    ]
    destinationDir = sourceSets.querydsl.java.srcDirs.iterator().next()
    dependencyCacheDir = compileJava.dependencyCacheDir
}
generateQueryDSL.mustRunAfter clean

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileQuerydslJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.querydsl.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/querydsl')
    }
}
