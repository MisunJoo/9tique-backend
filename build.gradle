buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

jar {
    baseName = 'nine_tique'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')

    // db
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    testCompile('com.h2database:h2')
    runtime('mysql:mysql-connector-java')

    // cache
    compile('org.springframework.boot:spring-boot-starter-cache')

    // lombok
    compile('org.projectlombok:lombok')

    // security
    compile('org.springframework.boot:spring-boot-starter-security')
//	testCompile('org.springframework.security:spring-security-test')
    compile 'io.jsonwebtoken:jjwt:0.7.0'  // jwt

    // apache commons
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'

    // queryDSL
    def querydslVersion = "4.1.4"
    compile "com.querydsl:querydsl-jpa:$querydslVersion"
    compile "com.querydsl:querydsl-apt:$querydslVersion"

    // Swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
}

// https://gist.github.com/EdwardBeckett/5377401
// http://blog.jongminkim.co.kr/?p=386
//sourceSets {
//    querydsl {
//        java {
//            srcDirs = ['src/main/querydsl']
//        }
//    }
//}
//
//configurations {
////    compile.exclude module: "spring-boot-starter-jdbc"  // 다른 commection pool 사용시 jdbc exclude
//    querydslapt
//}
//
//task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
//    source = sourceSets.main.java
//    classpath = configurations.compile + configurations.querydslapt
//    options.compilerArgs = [
//            '-proc:only', '-processor', 'com.querydsl.apt.jpa.JPAAnnotationProcessor'
//    ]
//    destinationDir = sourceSets.querydsl.java.srcDirs.iterator().next()
//    dependencyCacheDir = compileJava.dependencyCacheDir
//}
//generateQueryDSL.mustRunAfter clean
//
//compileJava {
//    dependsOn generateQueryDSL
//    source generateQueryDSL.destinationDir
//}
//
//compileQuerydslJava {
//    dependsOn generateQueryDSL
//    options.warnings = false
//    classpath += sourceSets.main.runtimeClasspath
//}
//
//clean {
//    delete sourceSets.querydsl.java.srcDirs
//}
//
//idea {
//    module {
//        sourceDirs += file('src/main/querydsl')
//    }
//}

def queryDslOutput = file("src-gen/main/java")

sourceSets {
    main {
        java {
            srcDir "src-gen/main/java"
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
}

compileTestJava.dependsOn(generateQueryDSL)

/**
 * gradle clean task 실행 시 querydsl 경로 제거
 */
clean {
    delete queryDslOutput
}

springBoot {
    mainClass = "kr.co.mash_up.nine_tique.NineTiqueApplication"
}
